<?php

namespace Proxies\__CG__\Users\UserManageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class users extends \Users\UserManageBundle\Entity\users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'id', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'username', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'password', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'userType', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'status', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'createdOn', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'createdBy', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'firstName', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'lastName', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'salutation', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'accountType', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'isTestAccount', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'title', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'email', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'email2', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'primaryPhone', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'phone2', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'accountId', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'resellerId');
        }

        return array('__isInitialized__', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'id', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'username', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'password', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'userType', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'status', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'createdOn', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'createdBy', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'firstName', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'lastName', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'salutation', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'accountType', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'isTestAccount', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'title', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'email', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'email2', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'primaryPhone', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'phone2', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'accountId', '' . "\0" . 'Users\\UserManageBundle\\Entity\\users' . "\0" . 'resellerId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserType($userType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserType', array($userType));

        return parent::setUserType($userType);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserType', array());

        return parent::getUserType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($createdOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', array($createdOn));

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', array());

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalutation($salutation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalutation', array($salutation));

        return parent::setSalutation($salutation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalutation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalutation', array());

        return parent::getSalutation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountType($accountType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountType', array($accountType));

        return parent::setAccountType($accountType);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountType', array());

        return parent::getAccountType();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsTestAccount($isTestAccount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsTestAccount', array($isTestAccount));

        return parent::setIsTestAccount($isTestAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsTestAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsTestAccount', array());

        return parent::getIsTestAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail2($email2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail2', array($email2));

        return parent::setEmail2($email2);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail2', array());

        return parent::getEmail2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryPhone($primaryPhone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryPhone', array($primaryPhone));

        return parent::setPrimaryPhone($primaryPhone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryPhone', array());

        return parent::getPrimaryPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone2($phone2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone2', array($phone2));

        return parent::setPhone2($phone2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone2', array());

        return parent::getPhone2();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountId($accountId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountId', array($accountId));

        return parent::setAccountId($accountId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountId', array());

        return parent::getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    public function setResellerId($resellerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResellerId', array($resellerId));

        return parent::setResellerId($resellerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getResellerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResellerId', array());

        return parent::getResellerId();
    }

}
